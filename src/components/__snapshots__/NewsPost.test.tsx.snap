// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NewsPost matches snapshot (has permissions) 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewsPost
    author={1}
    date="2019-12-30 13:00:00"
    hasEditDeletePermissions={true}
    message="Hello World!"
    onDelete={[Function]}
    onEdit={[Function]}
    title="Test title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "bg": "primary",
      "body": false,
      "children": Array [
        <ForwardRef>
          <ForwardRef>
            <b>
              Test title
            </b>
            <React.Fragment>
                 
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                type="button"
                variant="danger"
              >
                <FontAwesome
                  name="trash"
                />
                 Delete
              </ForwardRef>
                 
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                type="button"
                variant="success"
              >
                <FontAwesome
                  name="edit"
                />
                 Edit
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef>
          Hello World!
        </ForwardRef>,
        <ForwardRef>
          By #
          <strong>
            1
          </strong>
           on
           
          <i>
            December 30, 2019 1:00 PM
          </i>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef>
            <b>
              Test title
            </b>
            <React.Fragment>
                 
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                type="button"
                variant="danger"
              >
                <FontAwesome
                  name="trash"
                />
                 Delete
              </ForwardRef>
                 
              <ForwardRef
                active={false}
                disabled={false}
                onClick={[Function]}
                type="button"
                variant="success"
              >
                <FontAwesome
                  name="edit"
                />
                 Edit
              </ForwardRef>
            </React.Fragment>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <b>
                Test title
              </b>,
              <React.Fragment>
                   
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  variant="danger"
                >
                  <FontAwesome
                    name="trash"
                  />
                   Delete
                </ForwardRef>
                   
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  variant="success"
                >
                  <FontAwesome
                    name="edit"
                  />
                   Edit
                </ForwardRef>
              </React.Fragment>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Test title",
              },
              "ref": null,
              "rendered": "Test title",
              "type": "b",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "   ",
                  <ForwardRef
                    active={false}
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    variant="danger"
                  >
                    <FontAwesome
                      name="trash"
                    />
                     Delete
                  </ForwardRef>,
                  "   ",
                  <ForwardRef
                    active={false}
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    variant="success"
                  >
                    <FontAwesome
                      name="edit"
                    />
                     Edit
                  </ForwardRef>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "   ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "active": false,
                    "children": Array [
                      <FontAwesome
                        name="trash"
                      />,
                      " Delete",
                    ],
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                    "variant": "danger",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "name": "trash",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Delete",
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "active": false,
                      "disabled": false,
                      "type": "button",
                      "variant": "primary",
                    },
                    "displayName": "Button",
                    "render": [Function],
                  },
                },
                "   ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "active": false,
                    "children": Array [
                      <FontAwesome
                        name="edit"
                      />,
                      " Edit",
                    ],
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                    "variant": "success",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "name": "edit",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Edit",
                  ],
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "active": false,
                      "disabled": false,
                      "type": "button",
                      "variant": "primary",
                    },
                    "displayName": "Button",
                    "render": [Function],
                  },
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardTitle",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardHeader",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Hello World!",
        },
        "ref": null,
        "rendered": "Hello World!",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardBody",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "By #",
            <strong>
              1
            </strong>,
            " on",
            " ",
            <i>
              December 30, 2019 1:00 PM
            </i>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "By #",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 1,
            },
            "ref": null,
            "rendered": 1,
            "type": "strong",
          },
          " on",
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "December 30, 2019 1:00 PM",
            },
            "ref": null,
            "rendered": "December 30, 2019 1:00 PM",
            "type": "i",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardFooter",
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "Body": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardBody",
        "render": [Function],
      },
      "Footer": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardFooter",
        "render": [Function],
      },
      "Header": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardHeader",
        "render": [Function],
      },
      "Img": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "img",
          "variant": null,
        },
        "displayName": "CardImg",
        "render": [Function],
      },
      "ImgOverlay": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardImgOverlay",
        "render": [Function],
      },
      "Link": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardLink",
        "render": [Function],
      },
      "Subtitle": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardSubtitle",
        "render": [Function],
      },
      "Text": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardText",
        "render": [Function],
      },
      "Title": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardTitle",
        "render": [Function],
      },
      "defaultProps": Object {
        "as": "div",
        "body": false,
      },
      "displayName": "Card",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "bg": "primary",
        "body": false,
        "children": Array [
          <ForwardRef>
            <ForwardRef>
              <b>
                Test title
              </b>
              <React.Fragment>
                   
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  variant="danger"
                >
                  <FontAwesome
                    name="trash"
                  />
                   Delete
                </ForwardRef>
                   
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  variant="success"
                >
                  <FontAwesome
                    name="edit"
                  />
                   Edit
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            Hello World!
          </ForwardRef>,
          <ForwardRef>
            By #
            <strong>
              1
            </strong>
             on
             
            <i>
              December 30, 2019 1:00 PM
            </i>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef>
              <b>
                Test title
              </b>
              <React.Fragment>
                   
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  variant="danger"
                >
                  <FontAwesome
                    name="trash"
                  />
                   Delete
                </ForwardRef>
                   
                <ForwardRef
                  active={false}
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  variant="success"
                >
                  <FontAwesome
                    name="edit"
                  />
                   Edit
                </ForwardRef>
              </React.Fragment>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <b>
                  Test title
                </b>,
                <React.Fragment>
                     
                  <ForwardRef
                    active={false}
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    variant="danger"
                  >
                    <FontAwesome
                      name="trash"
                    />
                     Delete
                  </ForwardRef>
                     
                  <ForwardRef
                    active={false}
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    variant="success"
                  >
                    <FontAwesome
                      name="edit"
                    />
                     Edit
                  </ForwardRef>
                </React.Fragment>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Test title",
                },
                "ref": null,
                "rendered": "Test title",
                "type": "b",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    "   ",
                    <ForwardRef
                      active={false}
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      variant="danger"
                    >
                      <FontAwesome
                        name="trash"
                      />
                       Delete
                    </ForwardRef>,
                    "   ",
                    <ForwardRef
                      active={false}
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      variant="success"
                    >
                      <FontAwesome
                        name="edit"
                      />
                       Edit
                    </ForwardRef>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "   ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "active": false,
                      "children": Array [
                        <FontAwesome
                          name="trash"
                        />,
                        " Delete",
                      ],
                      "disabled": false,
                      "onClick": [Function],
                      "type": "button",
                      "variant": "danger",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "name": "trash",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Delete",
                    ],
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "active": false,
                        "disabled": false,
                        "type": "button",
                        "variant": "primary",
                      },
                      "displayName": "Button",
                      "render": [Function],
                    },
                  },
                  "   ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "active": false,
                      "children": Array [
                        <FontAwesome
                          name="edit"
                        />,
                        " Edit",
                      ],
                      "disabled": false,
                      "onClick": [Function],
                      "type": "button",
                      "variant": "success",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "name": "edit",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Edit",
                    ],
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "active": false,
                        "disabled": false,
                        "type": "button",
                        "variant": "primary",
                      },
                      "displayName": "Button",
                      "render": [Function],
                    },
                  },
                ],
                "type": Symbol(react.fragment),
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "CardTitle",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardHeader",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Hello World!",
          },
          "ref": null,
          "rendered": "Hello World!",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardBody",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "By #",
              <strong>
                1
              </strong>,
              " on",
              " ",
              <i>
                December 30, 2019 1:00 PM
              </i>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "By #",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 1,
              },
              "ref": null,
              "rendered": 1,
              "type": "strong",
            },
            " on",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "December 30, 2019 1:00 PM",
              },
              "ref": null,
              "rendered": "December 30, 2019 1:00 PM",
              "type": "i",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardFooter",
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Body": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardBody",
          "render": [Function],
        },
        "Footer": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardFooter",
          "render": [Function],
        },
        "Header": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardHeader",
          "render": [Function],
        },
        "Img": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "img",
            "variant": null,
          },
          "displayName": "CardImg",
          "render": [Function],
        },
        "ImgOverlay": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardImgOverlay",
          "render": [Function],
        },
        "Link": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardLink",
          "render": [Function],
        },
        "Subtitle": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardSubtitle",
          "render": [Function],
        },
        "Text": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardText",
          "render": [Function],
        },
        "Title": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardTitle",
          "render": [Function],
        },
        "defaultProps": Object {
          "as": "div",
          "body": false,
        },
        "displayName": "Card",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`NewsPost matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewsPost
    author={1}
    date="2019-12-30 12:00:00"
    hasEditDeletePermissions={false}
    message="Hello World!"
    onDelete={[Function]}
    onEdit={[Function]}
    title="Test title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "div",
      "bg": "primary",
      "body": false,
      "children": Array [
        <ForwardRef>
          <ForwardRef>
            <b>
              Test title
            </b>
          </ForwardRef>
        </ForwardRef>,
        <ForwardRef>
          Hello World!
        </ForwardRef>,
        <ForwardRef>
          By #
          <strong>
            1
          </strong>
           on
           
          <i>
            December 30, 2019 12:00 PM
          </i>
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef>
            <b>
              Test title
            </b>
          </ForwardRef>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <b>
                Test title
              </b>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Test title",
              },
              "ref": null,
              "rendered": "Test title",
              "type": "b",
            },
            false,
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardTitle",
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardHeader",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Hello World!",
        },
        "ref": null,
        "rendered": "Hello World!",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardBody",
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "By #",
            <strong>
              1
            </strong>,
            " on",
            " ",
            <i>
              December 30, 2019 12:00 PM
            </i>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "By #",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 1,
            },
            "ref": null,
            "rendered": 1,
            "type": "strong",
          },
          " on",
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "December 30, 2019 12:00 PM",
            },
            "ref": null,
            "rendered": "December 30, 2019 12:00 PM",
            "type": "i",
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardFooter",
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "Body": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardBody",
        "render": [Function],
      },
      "Footer": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardFooter",
        "render": [Function],
      },
      "Header": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardHeader",
        "render": [Function],
      },
      "Img": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "as": "img",
          "variant": null,
        },
        "displayName": "CardImg",
        "render": [Function],
      },
      "ImgOverlay": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardImgOverlay",
        "render": [Function],
      },
      "Link": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardLink",
        "render": [Function],
      },
      "Subtitle": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardSubtitle",
        "render": [Function],
      },
      "Text": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardText",
        "render": [Function],
      },
      "Title": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "displayName": "CardTitle",
        "render": [Function],
      },
      "defaultProps": Object {
        "as": "div",
        "body": false,
      },
      "displayName": "Card",
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "div",
        "bg": "primary",
        "body": false,
        "children": Array [
          <ForwardRef>
            <ForwardRef>
              <b>
                Test title
              </b>
            </ForwardRef>
          </ForwardRef>,
          <ForwardRef>
            Hello World!
          </ForwardRef>,
          <ForwardRef>
            By #
            <strong>
              1
            </strong>
             on
             
            <i>
              December 30, 2019 12:00 PM
            </i>
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef>
              <b>
                Test title
              </b>
            </ForwardRef>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <b>
                  Test title
                </b>,
                false,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Test title",
                },
                "ref": null,
                "rendered": "Test title",
                "type": "b",
              },
              false,
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "displayName": "CardTitle",
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardHeader",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Hello World!",
          },
          "ref": null,
          "rendered": "Hello World!",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardBody",
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "By #",
              <strong>
                1
              </strong>,
              " on",
              " ",
              <i>
                December 30, 2019 12:00 PM
              </i>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "By #",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 1,
              },
              "ref": null,
              "rendered": 1,
              "type": "strong",
            },
            " on",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "December 30, 2019 12:00 PM",
              },
              "ref": null,
              "rendered": "December 30, 2019 12:00 PM",
              "type": "i",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "displayName": "CardFooter",
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "Body": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardBody",
          "render": [Function],
        },
        "Footer": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardFooter",
          "render": [Function],
        },
        "Header": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardHeader",
          "render": [Function],
        },
        "Img": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "as": "img",
            "variant": null,
          },
          "displayName": "CardImg",
          "render": [Function],
        },
        "ImgOverlay": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardImgOverlay",
          "render": [Function],
        },
        "Link": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardLink",
          "render": [Function],
        },
        "Subtitle": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardSubtitle",
          "render": [Function],
        },
        "Text": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardText",
          "render": [Function],
        },
        "Title": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "displayName": "CardTitle",
          "render": [Function],
        },
        "defaultProps": Object {
          "as": "div",
          "body": false,
        },
        "displayName": "Card",
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
